{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reversedOrder","setReversedOrder","goodsToDispaly","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SAuBnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACMC,EAxBR,SAA0BC,EAAOL,EAAWE,GAC1C,IAAMI,EAAa,YAAOD,GAiB1B,OAfIL,GAAaE,IACfI,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKRT,EAAgBI,EAAcM,UAAYN,EAO7CO,CAAiBlB,EAAiBK,EAAWE,GAEjD,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,aAAchB,IAAcJ,KAEhCqB,QAAS,WACPhB,EAAaL,EAAqBM,IARtC,iCAcA,wBACEa,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,aAAchB,IAAcH,KAEhCoB,QAAS,WACPhB,EAAaJ,EAAmBK,IARpC,4BAcA,wBACEa,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAad,IAEjBe,QAAS,WACPd,GAAkBD,IARtB,sBAcEF,GAAaE,IACb,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAa,IACbE,GAAiB,IALrB,sBAaJ,6BACGC,EAAec,KAAI,SAAAC,GAAI,OACtB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YC5GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3c7ac2a2.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\n\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, sortField, reversedOrder) {\n  const preparedGoods = [...goods];\n\n  if (sortField || reversedOrder) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return reversedOrder ? preparedGoods.reverse() : preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reversedOrder, setReversedOrder] = useState(false);\n  const goodsToDispaly\n    = getPreparedGoods(goodsFromServer, sortField, reversedOrder);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': !(sortField === SORT_FIELD_ALPHABET) },\n          )}\n          onClick={() => {\n            setSortField(SORT_FIELD_ALPHABET, reversedOrder);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': !(sortField === SORT_FIELD_LENGTH) },\n          )}\n          onClick={() => {\n            setSortField(SORT_FIELD_LENGTH, reversedOrder);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !reversedOrder },\n          )}\n          onClick={() => {\n            setReversedOrder(!reversedOrder);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reversedOrder) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setReversedOrder(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goodsToDispaly.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}